{
  "hash": "57a8fe9538fe1b66404d97643266da67",
  "result": {
    "markdown": "---\ntitle: \"Drawing a star in R with ggplot\"\nsubtitle: \"Let's draw a star!\"\nauthor: \"Ricardo\"\ndate: \"2022-10-13\"\ncategories: [code, ggplot, Lula, PT, R, star]\nimage: \"image.png\"\ndraft: false\n---\n\n\n\n\nIn Brazil we are about to choose the next President for the 4 years ahead.\n\nI am a workers party supporter (PT, *Partido dos Trabalhadores*), with **[Lula](https://twitter.com/LulaOficial)** as our candidate.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Lulinha peace and love <3](lula.jpeg){#fig-lula width=375}\n:::\n:::\n\n\nWith this being told, the PT flag is a white star in a red background, my plan is to draw this, showing all the steps to do it.\n\nFirst of all, we will need to load `dplyr` and `ggplot2`, the package of functions that we will use in this session:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr) # data wrangling\nlibrary(ggplot2) # plots\n```\n:::\n\n\nLet's start by creating our blank canvas:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot()\n```\n\n::: {.cell-output-display}\n![Blank canvas.](index_files/figure-html/plot01-1.png){width=672}\n:::\n:::\n\n\nNow we can ask to ggplot to put a void theme (without texts or axis), and then to add a red background:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nred <- ggplot() +\n\ttheme_void() +\n\ttheme(plot.background = element_rect(fill = \"red\"))\n\nred\n```\n\n::: {.cell-output-display}\n![Red canvas.](index_files/figure-html/plot02-1.png){width=672}\n:::\n:::\n\n\nThe challenge now is to draw by draft our star. First, let's study how it is:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![A star and its coordinates.](star.jpg){#fig-star width=150%}\n:::\n:::\n\n\nTo do this, let's create a `tibble` with the `x` and `y` coordinates (11 to close the polygon):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- rep_len(x = c(100, 100 * sin(pi/10) / cos(pi/5)), \n\t\t\t length.out = 11)\n\nstar <- \n  tibble(\n  \tcoord = 1:11,\n    x = r * sin(seq(0, 2 * pi, length.out = 11)),\n    y = r * cos(seq(0, 2 * pi, length.out = 11))\n  )\n\nknitr::kable(star, align = \"c\")\n```\n\n::: {.cell-output-display}\n| coord |     x     |    y     |\n|:-----:|:---------:|:--------:|\n|   1   |  0.00000  | 100.0000 |\n|   2   | 22.45140  | 30.9017  |\n|   3   | 95.10565  | 30.9017  |\n|   4   | 36.32713  | -11.8034 |\n|   5   | 58.77853  | -80.9017 |\n|   6   |  0.00000  | -38.1966 |\n|   7   | -58.77853 | -80.9017 |\n|   8   | -36.32713 | -11.8034 |\n|   9   | -95.10565 | 30.9017  |\n|  10   | -22.45140 | 30.9017  |\n|  11   |  0.00000  | 100.0000 |\n\n\n\nStar coordinates.\n:::\n:::\n\n\nNow, let's include the star coordinates (and the paths) within the red plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nred +\n\tgeom_polygon(data = star, mapping = aes(x = x, y = y))\n```\n\n::: {.cell-output-display}\n![Almost there.](index_files/figure-html/plot03-1.png){width=672}\n:::\n:::\n\n\nThe next step is to paint the star in white color, and also fix the coordinates:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npt <- red +\n\tgeom_polygon(data = star, mapping = aes(x = x, y = y),\n\t\t\t\t fill = \"white\") +\n\tcoord_equal()\n\npt \n```\n\n::: {.cell-output-display}\n![The workers party flag!](index_files/figure-html/plot04-1.png){width=672}\n:::\n:::\n\n\nOur PT flag is ready!\n\nJust to complete, we can include the number of the party in the middle of the star, the number 13!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npt +\n\tannotate(geom = \"text\",\n\t\t\t label = 13,\n\t\t\t x = -4,\n\t\t\t y = 0,\n\t\t\t size = 40,\n\t\t\t color = \"red\")\n```\n\n::: {.cell-output-display}\n![It is ready!](index_files/figure-html/plot05-1.png){width=672}\n:::\n:::\n\n\nWe have our flag! \n\nThe next step is to dress all red at October 30th 2022, vote in our great eletronic voting machines, and hope for the best!\n\nMake the L!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Faz o L!](L.jpg){#fig-L width=640}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}